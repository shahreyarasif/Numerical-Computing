from numpy.lib.scimath import sqrt
import pandas as pd
plst=list()
ilst=list()
def f(x):
    return x**3+1.761
def MullerM(pa,pb,pc):
    p0 = pa
    p1 = pb
    p2 = pc
    f0 = f(p0)
    f1 = f(p1)
    f2 = f(p2)
    i = 0
    while i<=100:
        c = f2
        b = ((p0-p2)**2 *(f1-f2)-(p1-p2)**2 *(f0-f2))/((p0-p2)*(p1-p2)*(p0-p1))
        a = ((p1-p1)*(f0-f2) - (p0-p2)*(f1-f2))/((p0-p2)*(p1-p2)*(p0-p1))
        p3 = p2 - 2*c/(b+(b/abs(b))*sqrt(b**2 -4*a*c))
        plst.append(p3)
        ilst.append(i+1)
        if abs(p3-p2)<0.01:
            return p3
        p0 = p1
        p1 = p2
        p2 = p3
        f0 = f(p0)
        f1 = f(p1)
        f2 = f(p2)
        i = i+1
        

    print ("After", No, "iterations, still couldn't find the root.")
MullurData={
    'No Of Iterations':ilst,
    'Roots':plst
    
}
